///////////////////////////////////////////////////////////////////////////////
// CPO file generated at 2019.04.24-00:44:52 for model: BRDefenderP
// Source file: /home/kai/Dropbox/USC/publication/intrusion/greedy/src/solvers/DefenderOracle/BRDefenderP.py
///////////////////////////////////////////////////////////////////////////////

//--- Internals ---
internals {
   version(12.8.0.0);
}

//--- Constants ---

//--- Variables ---
#line 41 "/home/kai/Dropbox/USC/publication/intrusion/greedy/src/solvers/DefenderOracle/BRDefenderP.py"
lambda_0_0 = intVar(0..1);
lambda_0_1 = intVar(0..1);
lambda_0_2 = intVar(0..1);
lambda_0_3 = intVar(0..1);
lambda_0_4 = intVar(0..1);
lambda_0_5 = intVar(0..1);
lambda_0_6 = intVar(0..1);
lambda_1_0 = intVar(0..1);
lambda_1_1 = intVar(0..1);
lambda_1_2 = intVar(0..1);
lambda_1_3 = intVar(0..1);
lambda_1_4 = intVar(0..1);
lambda_1_5 = intVar(0..1);
lambda_1_6 = intVar(0..1);
lambda_node_0_0 = intVar(0..1);
#line 42
lambda_node_0_1 = intVar(0..1);
lambda_node_0_2 = intVar(0..1);
lambda_node_0_3 = intVar(0..1);
lambda_node_0_4 = intVar(0..1);
lambda_node_0_5 = intVar(0..1);
#line 41
lambda_node_1_0 = intVar(0..1);
#line 42
lambda_node_1_1 = intVar(0..1);
lambda_node_1_2 = intVar(0..1);
lambda_node_1_3 = intVar(0..1);
lambda_node_1_4 = intVar(0..1);
lambda_node_1_5 = intVar(0..1);

//--- Expressions ---
#line 41 "/home/kai/Dropbox/USC/publication/intrusion/greedy/src/solvers/DefenderOracle/BRDefenderP.py"
lambda_0_0 <= lambda_node_0_0;
#line 42
lambda_0_0 <= lambda_node_0_1;
#line 41
lambda_0_1 <= lambda_node_0_0;
#line 42
lambda_0_1 <= lambda_node_0_2;
#line 41
lambda_0_2 <= lambda_node_0_0;
#line 42
lambda_0_2 <= lambda_node_0_3;
#line 41
lambda_0_3 <= lambda_node_0_1;
#line 42
lambda_0_3 <= lambda_node_0_4;
#line 41
lambda_0_4 <= lambda_node_0_2;
#line 42
lambda_0_4 <= lambda_node_0_4;
#line 41
lambda_0_5 <= lambda_node_0_3;
#line 42
lambda_0_5 <= lambda_node_0_4;
#line 41
lambda_0_6 <= lambda_node_0_4;
#line 42
lambda_0_6 <= lambda_node_0_5;
#line 44
0 + lambda_0_0 + lambda_0_1 + lambda_0_2 + lambda_0_3 + lambda_0_4 + lambda_0_5 + lambda_0_6 == 1;
#line 45
0 + lambda_node_0_0 + lambda_node_0_1 + lambda_node_0_2 + lambda_node_0_3 + lambda_node_0_4 + lambda_node_0_5 == 2;
#line 41
lambda_1_0 <= lambda_node_1_0;
#line 42
lambda_1_0 <= lambda_node_1_1;
#line 41
lambda_1_1 <= lambda_node_1_0;
#line 42
lambda_1_1 <= lambda_node_1_2;
#line 41
lambda_1_2 <= lambda_node_1_0;
#line 42
lambda_1_2 <= lambda_node_1_3;
#line 41
lambda_1_3 <= lambda_node_1_1;
#line 42
lambda_1_3 <= lambda_node_1_4;
#line 41
lambda_1_4 <= lambda_node_1_2;
#line 42
lambda_1_4 <= lambda_node_1_4;
#line 41
lambda_1_5 <= lambda_node_1_3;
#line 42
lambda_1_5 <= lambda_node_1_4;
#line 41
lambda_1_6 <= lambda_node_1_4;
#line 42
lambda_1_6 <= lambda_node_1_5;
#line 44
0 + lambda_1_0 + lambda_1_1 + lambda_1_2 + lambda_1_3 + lambda_1_4 + lambda_1_5 + lambda_1_6 == 1;
#line 45
0 + lambda_node_1_0 + lambda_node_1_1 + lambda_node_1_2 + lambda_node_1_3 + lambda_node_1_4 + lambda_node_1_5 == 2;
#line 58
maximize(0 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1) * (1 - lambda_0_6 * 1) * (1 - lambda_1_6 * 1)) * 0.1111111111111111 * 2.0 + -(1 * (1 - lambda_0_1 * 1) * (1 - lambda_1_1 * 1) * (1 - lambda_0_4 * 1) * (1 - lambda_1_4 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_2 * 1) * (1 - lambda_1_2 * 1) * (1 - lambda_0_5 * 1) * (1 - lambda_1_5 * 1) * (1 - lambda_0_6 * 1) * (1 - lambda_1_6 * 1)) * 0.1111111111111111 * 2.0 + -(1 * (1 - lambda_0_2 * 1) * (1 - lambda_1_2 * 1) * (1 - lambda_0_5 * 1) * (1 - lambda_1_5 * 1)) * 0.2222222222222222 * 1 + -(1 * (1 - lambda_0_1 * 1) * (1 - lambda_1_1 * 1) * (1 - lambda_0_4 * 1) * (1 - lambda_1_4 * 1) * (1 - lambda_0_6 * 1) * (1 - lambda_1_6 * 1)) * 0.1111111111111111 * 2.0 + -(1 * (1 - lambda_0_1 * 1) * (1 - lambda_1_1 * 1) * (1 - lambda_0_4 * 1) * (1 - lambda_1_4 * 1)) * 0.2222222222222222 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0 * 1 + -(1 * (1 - lambda_0_0 * 1) * (1 - lambda_1_0 * 1) * (1 - lambda_0_3 * 1) * (1 - lambda_1_3 * 1)) * 0.2222222222222222 * 1);

//--- Parameters ---
#line off
parameters {
   LogVerbosity = Quiet;
}
